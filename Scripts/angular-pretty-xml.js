!function (n) { "function" == typeof define && define.amd ? define(["angular"], function (e) { return n(e) }) : "object" == typeof exports ? module.exports = n(require("angular")).name : n(angular) }(function (d) { function e(e, n) { isFinite(n) ? 0 !== n && (n = n || 2) : d.isString(n) || (n = 2); for (var r = e.replace(/>\s*</gm, "><").replace(/</g, "~::~<").replace(/\s*xmlns([=:])/g, "~::~xmlns$1").split("~::~"), i = r.length, t = !1, f = 0, x = "", a = function (e) { var n = ""; if (isNaN(parseInt(e))) n = e; else for (var r = 0; r < e; r++) n += " "; for (var i = ["\n"], t = 0; t < 100; t++) i.push(i[t] + n); return i }(n), s = 0; s < i; s++) -1 !== r[s].indexOf("<!") ? (x += a[f] + r[s], t = !0, -1 === r[s].indexOf("--\x3e") && -1 === r[s].indexOf("]>") && -1 === r[s].indexOf("!DOCTYPE") || (t = !1)) : -1 !== r[s].indexOf("--\x3e") || -1 !== r[s].indexOf("]>") ? (x += r[s], t = !1) : /^<\w/.test(r[s - 1]) && /^<\/\w/.test(r[s]) && /^<[\w:\-.,]+/.exec(r[s - 1])[0] === /^<\/[\w:\-.,]+/.exec(r[s])[0].replace("/", "") ? (x += r[s], t || f--) : -1 !== r[s].search(/<\w/) && -1 === r[s].indexOf("</") && -1 === r[s].indexOf("/>") ? x += t ? r[s] : a[f++] + r[s] : -1 !== r[s].search(/<\w/) && -1 !== r[s].indexOf("</") ? x += t ? r[s] : a[f] + r[s] : -1 < r[s].search(/<\//) ? x += t ? r[s] : a[--f] + r[s] : -1 !== r[s].indexOf("/>") ? x += t ? r[s] : a[f] + r[s] : -1 !== r[s].indexOf("<?") || -1 !== r[s].indexOf("xmlns:") || -1 !== r[s].indexOf("xmlns=") ? x += a[f] + r[s] : x += r[s]; return x.trim() } return d.module("prettyXml", []).filter("prettyXml", function () { return e }) });